using UnityEngine;


public class SpikeGenerator : MonoBehaviour
{
    public GameObject spike;

    public float MinSpeed;
    public float MaxSpeed;
    public float currentSpeed;

    public float SpeedMultiplier;

    void Awake()
    {
        currentSpeed = MinSpeed;
        generateSpike();
    }
    public void GenerateNextSpikeWihtGap()
    {
        float randomWait = random.Range(0.1f, 1.2f);
        invoke("generateSpike", randomWait);

    }



     public void generateSpike()
    {
        GameObject SpikeIns = Instantiate(spike, transform.position, transform.rotation);

        SpikeIns.GetComponent<SpikeScript>().spikeGenerator = this;


    }
    void Update()
    {
        if (currentSpeed < MaxSpeed)
        {
            currentSpeed += SpeedMultiplier;
        }
    }
}


using UnityEngine;

public class SpikeScript : MonoBehaviour
{
    public SpikeGenerator spikeGenerator;

    void Update()
    {
        transform.Translate(Vector2.left * spikeGenerator.currentSpeed * Time.deltaTime);
    }


    private void OnTriggerEnter2D(Collider2D collision)
    {
        if (collision.gameObject.CompareTag("nextLine"))
        {
            spikeGenerator.generateNextSpikeWihtGap();
        }
        if (collision.gameObject.CompareTag("Finish"))
        {
            Destroy(this.gameObject);
        }
    }
}


spikegenerator.css
using UnityEngine;

    public class SpikeScript : MonoBehaviour
    {
        public SpikeGenerator spikeGenerator;

        void Update()
        {
            transform.Translate(Vector2.left * spikeGenerator.currentSpeed * Time.deltaTime);
        }


        private void OnTriggerEnter2D(Collider2D collision)
        {
            if (collision.gameObject.CompareTag("nextLine"))
            {
                spikeGenerator.generateNextSpikeWihtGap();
            }
            if (collision.gameObject.CompareTag("Finish"))
            {
                Destroy(this.gameObject);
            }
        }
    }
spikegenerator.css
